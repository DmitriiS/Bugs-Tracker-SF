<apex:page showHeader="false" sidebar="false">
	<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">      
<head>
    <title>Salesforce Bugs Tracker Application</title>
    <apex:stylesheet value="{!URLFOR($Resource.SLDS100, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
    <apex:stylesheet value="https://code.jquery.com/ui/1.11.4/themes/ui-lightness/jquery-ui.css" />
    <script src="https://code.jquery.com/jquery-1.12.2.js"></script>
    <script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
</head>

<apex:remoteObjects >
	<apex:remoteObjectModel name="Objective__c" 
							jsShorthand="Objective" 
							fields="Id,
							Name, 
							Description__c, 
							Objective_Status__c, 
							Objective_Type__c,
							Start_Date__c, 	
							End_Date__c, 
							Version__c">
	</apex:remoteObjectModel>
</apex:remoteObjects>

<body>
<div class="slds">  
<!-- IMPROVE THIS PART -->
<div id="wrapper" aria-hidden="false">
<div class="slds-page-header" role="banner">
  <div class="slds-grid">
    <div class="slds-col slds-has-flexi-truncate">
      <div class="slds-media">
        <div class="slds-media__figure">
          <svg aria-hidden="true" class="slds-icon slds-icon--large slds-icon-standard-user">
            <use xlink:href="{!URLFOR($Resource.SLDS100, 'assets/icons/standard-sprite/svg/symbols.svg#task')}"></use>
          </svg>
        </div>
        <div class="slds-media__body">
          <div class="slds-grid">
            <h1 class="slds-page-header__title slds-m-right--small slds-truncate slds-align-middle" title="Record Title">List of Objectives</h1>
            <div class="slds-col slds-shrink-none">
              <button class="slds-button slds-button--neutral slds-not-selected" aria-live="assertive" id="newObjective">
                <span class="slds-text-not-selected">
                  <svg aria-hidden="true" class="slds-button__icon--stateful slds-button__icon--left">
                    <use xlink:href="{!URLFOR($Resource.SLDS100, 'assets/icons/utility-sprite/svg/symbols.svg#add')}"></use>
                  </svg>Add new Bug or Feature
                </span>                
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="slds-col slds-no-flex slds-align-bottom">
        <button class="slds-button slds-button--brand" id="backupButton">BackUp Settings</button>        
    </div>  
  </div>
</div>

<table class="slds-table slds-table--bordered">
    <thead>
      <tr class="slds-text-heading--label">        
        <th class="slds-is-sortable" scope="col">
          <div class="slds-truncate">Objective Name</div>
        </th>
        <th class="slds-is-sortable" scope="col">
          <div class="slds-truncate">Objective Type</div>
        </th>
        <th class="slds-is-sortable" scope="col">
          <div class="slds-truncate">Objective Status</div>
        </th>
        <th class="slds-is-sortable" scope="col">
          <div class="slds-truncate">Start Date</div>
        </th>
        <th class="slds-is-sortable" scope="col">
          <div class="slds-truncate">End Date</div>
        </th>
        <th class="slds-is-sortable" scope="col">
          <div class="slds-truncate">Description</div>
        </th>
        <th class="slds-is-sortable" scope="col">
          <div class="slds-truncate">Version</div>
        </th>       
        <th class="slds-cell-shrink"></th>
      </tr>
    </thead>
    <tbody id='theObjectivesTable'>   
    <!--TABLE POPULATED FROM REMOTE OBJECTS -->
    </tbody>
</table>

	<!-- FORM FOR CREATING NEW OBJECTIVE -->
  	<div class="slds-modal slds-fade-in-close" id="newObjectiveModal" aria-hidden="true" role="dialog">
    <div class="slds-modal__container">
      <div class="slds-modal__header">
        <button class="slds-button slds-button--icon-inverse slds-modal__close" >
          <svg aria-hidden="true" class="slds-button__icon slds-button__icon--large">
            <use xlink:href="{!URLFOR($Resource.SLDS100, 'assets/icons/action-sprite/svg/symbols.svg#close')}"></use>
          </svg>
          <span class="slds-assistive-text">Close</span>
        </button>
        <h2 class="slds-text-heading--medium">Add new Bug or Feature</h2>
      </div>
      <div class="slds-modal__content slds-p-around--medium">
        <div>
        <form class="slds-form--stacked">
			<div class="slds-form-element">
				<label class="slds-form-element__label slds-required" for="name">Name</label>
				<div class="slds-form-element__control">
					<input id="newName" class="slds-input" type="text" />
				</div>
			</div>
			<div class="slds-form-element">
				<label class="slds-form-element__label" for="description">Description</label>
				<div class="slds-form-element__control">
					<input id="newDescription" class="slds-input" type="text" />
				</div>
			</div>
			<div class="slds-form-element">
				<label class="slds-form-element__label" for="objectiveStatus">Objective Status</label>
				<div class="slds-form-element__control">
					<input id="newObjectiveStatus" class="slds-input" type="text" />
				</div>
			</div>
			<div class="slds-form-element">
				<label class="slds-form-element__label" for="objectiveType">Objective Type</label>
				<div class="slds-form-element__control">
					<input id="newObjectiveType" class="slds-input" type="text" />
				</div>
			</div>
			<div class="slds-form-element">
				<label class="slds-form-element__label slds-required" for="version">Version</label>
				<div class="slds-form-element__control">
					<input id="newVersion" class="slds-input" type="text" />
				</div>
			</div>
			<div class="slds-form-element">
				<label class="slds-form-element__label slds-required" for="startDate">Start Date</label>
				<div class="slds-form-element__control">
					<input id="newStartDate" class="slds-input date-pick" />
				</div>
			</div>
			<div class="slds-form-element">
				<label class="slds-form-element__label" for="endDate">End Date</label>
				<div class="slds-form-element__control">
					<input id="newEndDate" class="slds-input date-pick" type="text" />
				</div>
			</div>		
			<input type="hidden" class="form-control" id="inputId" />			
			</form>
        </div>
      </div>
      <div class="slds-modal__footer">
        <button class="slds-button slds-button--neutral cancel-modal">Cancel</button>
        <button class="slds-button slds-button--neutral slds-button--brand" id="saveObjective">Save</button>
      </div>
    </div>
    </div>
    <div class="slds-backdrop slds-backdrop--close" id="modalBackground"></div>
  	
	
  	<footer role="contentinfo" class="slds-p-around--large">
      <div class="slds-grid slds-grid--align-spread">
        <p class="slds-col">Salesforce Bugs Tracker Application</p>
        <p class="slds-col">&copy; Dmitrii Surkov</p>
      </div>
    </footer>
	</div>
	</div>
</body>
</html> 

<script type="text/javascript">
	j$ = jQuery.noConflict();
	
	j$(document).ready(function () 
    {    	
    	retrieveObjectives();

    	var myDate = new Date();
    	j$("#newStartDate, .date-pick").datepicker(
    	{
    		dateFormat:"mm/dd/yy",
    	});
		j$("#newStartDate").datepicker("setDate", myDate);
    });    
	
	// New bug or feature click    
    j$('#newObjective').click(function()
    { 
    	openModalWindow();
    });

	//Save button click       
    j$('#saveObjective').click(function()
    { 
    	createObjective();
    });

    //Close button click
    j$('.slds-modal__close, .cancel-modal').click(function()
    {
    	closeModalWindow();
    });       

    //Backup buttin click
    j$('#backupButton').click(function()
    {
    	checkForNull();
    });
    
    //Function to retrieve all objective
    function retrieveObjectives()
    {
    	var objectives = new SObjectModel.Objective();
    	objectives.retrieve({limit: 100}, function(err, records)
    	{
            if(err) 
            {
				alert(err.message);
			}else 
			{
				populate(records); 
			}
		});		
    }

    //Function to populate retrieved records to page
    function populate(records)
    {
    	var tableBody = j$('#theObjectivesTable');
        records.forEach(function(record) 
        {
        	var tableRow = j$('<tr class="slds-hint-parent">');
        	var tableColName = j$('<td class="slds-truncate" scope="row" data-label="Name">' + record.get('Name') + '</td>');
        	var tableColDesc = j$('<td class="slds-truncate" scope="row" data-label="Description">' + record.get('Description__c') + '</td>');
        	var tableColStat = j$('<td class="slds-truncate" scope="row" data-label="Status">' + record.get('Objective_Status__c') + '</td>');
        	var tableColType = j$('<td class="slds-truncate" scope="row" data-label="Type">' + record.get('Objective_Type__c') + '</td>');
        	var tableColVers = j$('<td class="slds-truncate" scope="row" data-label="Version">' + record.get('Version__c') + '</td>');
        	var tableColSDate = j$('<td class="slds-truncate" scope="row" data-label="Start_Date">' + record.get('Start_Date__c') + '</td>');
        	var tableColEDate = j$('<td class="slds-truncate" scope="row" data-label="End_Date">' + record.get('End_Date__c') + '</td>'); 
        	var tableButtons = j$('<td class="slds-truncate" scope="row" data-label="End_Date">' + record.get('Id') + '</td></tr>'); 
        	/*var buttons = $j('<td class="slds-cell-shrink" data-label="Actions"><button class="slds-button slds-button--neutral">Edit</button><button class="slds-button slds-button--neutral">Delete</button></td></tr>');*/
        	   

        	tableRow.prepend(tableButtons);        	
        	tableRow.prepend(tableColVers); 
        	tableRow.prepend(tableColDesc);
        	tableRow.prepend(tableColEDate);
        	tableRow.prepend(tableColSDate);
        	tableRow.prepend(tableColStat);
        	tableRow.prepend(tableColType);
	        tableRow.prepend(tableColName);
	        tableRow.appendTo(tableBody);

	        checkForNull();
        });
	}    

	//Function to Create Objective
  	function createObjective()
  	{
    	var createObj = new SObjectModel.Objective(
	    { 
	    	Name : j$('#newName').val(),
			Description__c : j$('#newDescription').val(),
			Objective_Status__c : j$('#newObjectiveStatus').val(),
			Objective_Type__c : j$('#newObjectiveType').val(),
			Version__c : j$('#newVersion').val(),
			Start_Date__c : j$('#newStartDate').val(),
			End_Date__c : j$('#newEndDate').val()							
	    });
		createObj.create(createCallback);	
    }    

    //Function to change "undefiend" values to empty string
    function checkForNull()
    {
    	j$("td:contains('undefined')").html("");
    }

    // Callback to handle DML Remote Objects calls
    function createCallback(err, ids)
    {
	    if (err) 
	    { 
	        alert(err); 
	    } else 
	    {
	        j$('#theObjectivesTable').empty();
	        closeModalWindow();
	        retrieveObjectives();
	    }
    }

    function closeModalWindow() 
    {
    	j$('.slds-modal').toggleClass('slds-fade-in-open slds-fade-in-close');
    	j$('.slds-backdrop').toggleClass('slds-backdrop--open slds-backdrop--close'); 
    }

    function openModalWindow() 
    {
    	j$('.slds-modal').toggleClass('slds-fade-in-close slds-fade-in-open');
    	j$('.slds-backdrop').toggleClass('slds-backdrop--close slds-backdrop--open'); 
    }

</script>
</apex:page>